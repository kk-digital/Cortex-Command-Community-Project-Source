#include "GUI.h"

using namespace RTE;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIProperties::GUIProperties(const std::string &Name) {
	m_Name = Name;
	m_VariableList.clear();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIProperties::GUIProperties() {
	m_Name = "";
	m_VariableList.clear();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIProperties::~GUIProperties() {
	Clear();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProperties::Clear(){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProperties::AddVariable(const std::string &Variable, const std::string &Value){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProperties::AddVariable(const std::string &Variable, char *Value){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProperties::AddVariable(const std::string &Variable, int Value){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProperties::AddVariable(const std::string &Variable, bool Value){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUIProperties::SetValue(const std::string& Variable, const std::string& Value) { return false; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUIProperties::SetValue(const std::string& Variable, int Value) { return false; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProperties::Update(GUIProperties* Props, bool Add) {}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUIProperties::GetValue(const std::string& Variable, std::string* Value) { return false; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUIProperties::GetValue(const std::string& Variable, std::string* Array, int MaxArraySize) { return 0; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUIProperties::GetValue(const std::string& Variable, int* Array, int MaxArraySize) { return 0; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUIProperties::GetValue(const std::string& Variable, int* Value) { return false; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUIProperties::GetValue(const std::string& Variable, unsigned long* Value) { return false; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUIProperties::GetValue(const std::string& Variable, bool* Value) { return false; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::string GUIProperties::GetName() const {
	return m_Name;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::string GUIProperties::ToString() { return NULL; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUIProperties::GetCount() const {
	return m_VariableList.size();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUIProperties::GetVariable(int Index, std::string* Name, std::string* Value) { return false; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUIProperties::SetVariable(int Index, const std::string &Name, const std::string &Value) { return false; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProperties::Sort(bool Ascending){}
