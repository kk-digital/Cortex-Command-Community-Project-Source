#include "GUI.h"
#include "GUILabel.h"

using namespace RTE;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUILabel::GUILabel(GUIManager *Manager, GUIControlManager *ControlManager) : GUIControl(), GUIPanel(Manager) {
	m_ControlID = "LABEL";
	m_ControlManager = ControlManager;
	m_Font = nullptr;
	m_FontColor = 0;
	m_Text = "";
	m_HAlignment = GUIFont::Left;
	m_VAlignment = GUIFont::Middle;
	m_HorizontalOverflowScroll = false;
	m_VerticalOverflowScroll = false;
	m_OverflowScrollState = OverflowScrollState::Deactivated;
	m_OverflowScrollTimer = Timer();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::Create(const std::string &Name, int X, int Y, int Width, int Height){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::Create(GUIProperties *Props){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::ChangeSkin(GUISkin *Skin){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::Draw(GUIScreen *Screen) {
	Draw(Screen->GetBitmap());
	GUIPanel::Draw(Screen);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::Draw(GUIBitmap *Bitmap, bool overwiteFontColorAndKerning){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::OnMouseDown(int X, int Y, int Buttons, int Modifier){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::OnMouseUp(int X, int Y, int Buttons, int Modifier){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIPanel * GUILabel::GetPanel() {
	return this;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::Move(int X, int Y) {
	GUIPanel::SetPositionAbs(X, Y);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::Resize(int Width, int Height){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUILabel::ResizeHeightToFit() { return 0; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::GetControlRect(int *X, int *Y, int *Width, int *Height) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUILabel::GetTextHeight() {
	return 0;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::SetHorizontalOverflowScroll(bool newOverflowScroll){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::SetVerticalOverflowScroll(bool newOverflowScroll){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::ActivateDeactivateOverflowScroll(bool activateScroll){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::StoreProperties(){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUILabel::ApplyProperties(GUIProperties *Props){}
