#include "GUI.h"
#include "GUICollectionBox.h"

using namespace RTE;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUICollectionBox::GUICollectionBox(GUIManager *Manager, GUIControlManager *ControlManager) : GUIControl(), GUIPanel(Manager) {
	m_ControlID = "COLLECTIONBOX";
	m_Background = nullptr;
	m_ControlManager = ControlManager;
	m_DrawBackground = true;
	m_DrawType = Color;
	m_DrawColor = 0;
	m_DrawBitmap = nullptr;

	m_IsContainer = true; // We are a container
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::Create(const std::string &Name, int X, int Y, int Width, int Height){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::Create(GUIProperties *Props) {
	GUIControl::Create(Props);

	// Minimum size of the control
	m_MinWidth = 10;
	m_MinHeight = 10;

	// Default size of the control
	m_DefWidth = 100;
	m_DefHeight = 100;

	// Setup the panel
	GUIPanel::LoadProperties(Props);

	// Make sure the box isn't too small
	m_Width = std::max(m_Width, m_MinWidth);
	m_Height = std::max(m_Height, m_MinHeight);

	// Get the values
	Props->GetValue("DrawBackground", &m_DrawBackground);
	std::string v;
	Props->GetValue("DrawType", &v);
	if (stricmp(v.c_str(), "Color") == 0) {
		m_DrawType = Color;
	} else if (stricmp(v.c_str(), "Image") == 0) {
		m_DrawType = Image;
	} else if (stricmp(v.c_str(), "Panel") == 0) {
		m_DrawType = Panel;
	}
	Props->GetValue("DrawColor", &m_DrawColor);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::Destroy() {
	delete m_Background;
	delete m_DrawBitmap;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::ChangeSkin(GUISkin *Skin) {
	GUIControl::ChangeSkin(Skin);

	// Build the panel bitmap
	BuildBitmap();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::BuildBitmap() {
	// Free any old bitmap
	delete m_DrawBitmap;

	// Create a new bitmap.
	m_DrawBitmap = m_Skin->CreateBitmap(m_Width, m_Height);

	// Create the button image
	m_Skin->BuildStandardRect(m_DrawBitmap, "CollectionBox_Panel", 0, 0, m_Width, m_Height);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::Draw(GUIScreen *Screen){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::OnMouseDown(int X, int Y, int Buttons, int Modifier) {
	CaptureMouse();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::OnMouseUp(int X, int Y, int Buttons, int Modifier) {
	ReleaseMouse();

	AddEvent(GUIEvent::Notification, Clicked, Buttons);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::OnMouseMove(int X, int Y, int Buttons, int Modifier) {
	AddEvent(GUIEvent::Notification, MouseMove, Buttons);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIPanel * GUICollectionBox::GetPanel() {
	return this;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::Move(int X, int Y){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::Resize(int Width, int Height){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::GetControlRect(int *X, int *Y, int *Width, int *Height) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::SetDrawImage(GUIBitmap *Bitmap) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::SetDrawBackground(bool DrawBack) {
	m_DrawBackground = DrawBack;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::SetDrawType(int Type) {
	m_DrawType = Type;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::SetDrawColor(unsigned long Color) {
	m_DrawColor = Color;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::StoreProperties(){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICollectionBox::ApplyProperties(GUIProperties *Props){}