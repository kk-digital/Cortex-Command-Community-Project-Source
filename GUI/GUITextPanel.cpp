#include "GUI.h"
#include "GUITextPanel.h"

using namespace RTE;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUITextPanel::GUITextPanel(GUIManager *Manager) : GUIPanel(Manager) {
	m_Font = nullptr;
	m_CursorX = m_CursorY = 0;
	m_CursorIndex = 0;
	m_CursorColor = 0;
	m_CursorBlinkCount = 0;

	m_FontColor = 0;
	m_FontSelectColor = 0;
	m_StartIndex = 0;
	m_GotSelection = false;
	m_SelectedColorIndex = 0;
	m_Locked = false;
	m_WidthMargin = 3;
	m_HeightMargin = 0;

	m_MaxTextLength = 0;
	m_NumericOnly = false;
	m_MaxNumericValue = 0;
}

// TODO: Both constructors use a common clear function?? Same with other panels

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUITextPanel::GUITextPanel() : GUIPanel() {
	m_Font = nullptr;
	m_Text = "";
	m_CursorX = m_CursorY = 0;
	m_CursorIndex = 0;
	m_CursorColor = 0;
	m_CursorBlinkCount = 0;
	m_FontColor = 0;
	m_FontSelectColor = 0;
	m_StartIndex = 0;
	m_GotSelection = false;
	m_SelectedColorIndex = 0;
	m_Locked = false;
	m_WidthMargin = 3;
	m_HeightMargin = 0;

	m_MaxTextLength = 0;
	m_NumericOnly = false;
	m_MaxNumericValue = 0;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::Create(int X, int Y, int Width, int Height){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::ChangeSkin(GUISkin *Skin){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::Draw(GUIScreen *Screen){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::OnKeyPress(int KeyCode, int Modifier){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::OnMouseDown(int X, int Y, int Buttons, int Modifier){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::OnMouseMove(int X, int Y, int Buttons, int Modifier){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::OnMouseUp(int X, int Y, int Buttons, int Modifier){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::UpdateText(bool Typing, bool DoIncrement){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::DoSelection(int Start, int End){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int RTE::GUITextPanel::GetStartOfNextCharacterGroup(const std::string_view& stringToCheck, int currentIndex) const { return 0; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int RTE::GUITextPanel::GetStartOfPreviousCharacterGroup(const std::string_view& stringToCheck, int currentIndex) const { return 0; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::RemoveSelectionText(){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::SetCursorPos(int cursorPos){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::string GUITextPanel::GetSelectionText() const { return NULL; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::SetText(const std::string &Text){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::SetRightText(const std::string &rightText){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::SetSelection(int Start, int End){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUITextPanel::GetSelectionStart() const { return 0; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUITextPanel::GetSelectionEnd() const { return 0; }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::ClearSelection() {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUITextPanel::SetLocked(bool Locked) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUITextPanel::GetLocked() const {
	return m_Locked;
}