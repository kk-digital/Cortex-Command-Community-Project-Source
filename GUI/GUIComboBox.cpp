#include "GUI.h"
#include "GUIComboBox.h"

using namespace RTE;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIComboBox::GUIComboBox(GUIManager *Manager, GUIControlManager *ControlManager) : GUIControl(), GUIPanel(Manager) {
	m_ControlID = "COMBOBOX";
	m_ControlManager = ControlManager;
	m_DrawBitmap = nullptr;
	m_OldSelection = 0;
	m_CreatedList = false;
	m_DropHeight = 80;
	m_DropDownStyle = DropDownList;

	// Create the listpanel
	m_ListPanel = new GUIListPanel(Manager);

	// Create the textpanel
	m_TextPanel = new GUITextPanel(Manager);

	// Create the button
	m_Button = new GUIComboBoxButton(Manager);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::Create(const std::string &Name, int X, int Y, int Width, int Height){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::Create(GUIProperties *Props){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::Destroy(){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::Activate(){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::ChangeSkin(GUISkin *Skin){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::Draw(GUIScreen *Screen){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIPanel * GUIComboBox::GetPanel() {
	return this;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::ReceiveSignal(GUIPanel* Source, int Code, int Data){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::BeginUpdate() {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::EndUpdate() {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::AddItem(const std::string &Name, const std::string &ExtraText, GUIBitmap *pBitmap, const Entity *pEntity) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::ClearList() {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::Move(int X, int Y) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::Resize(int Width, int Height){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::GetControlRect(int *X, int *Y, int *Width, int *Height) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::DeleteItem(int Index){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUIComboBox::GetCount() {
	return m_ListPanel->GetItemList()->size();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUIComboBox::GetSelectedIndex() {
	return m_ListPanel->GetSelectedIndex();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::SetSelectedIndex(int Index){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUIComboBox::RollbackSelection() {
	return false;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIListPanel::Item * GUIComboBox::GetItem(int Index) {
	return m_ListPanel->GetItem(Index);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::SetDropHeight(int Drop) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::StoreProperties(){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::SetDropDownStyle(int Style) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUIComboBox::GetDropDownStyle() const {
	return m_DropDownStyle;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::SetVisible(bool Visible) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUIComboBox::GetVisible() {
	return _GetVisible();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::SetEnabled(bool Enabled) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool GUIComboBox::GetEnabled() {
	return _GetEnabled();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::string GUIComboBox::GetText() {
	return "";
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::SetText(const std::string &Text) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBox::ApplyProperties(GUIProperties *Props) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIComboBoxButton::GUIComboBoxButton(GUIManager *Manager) : GUIPanel(Manager) {
	m_DrawBitmap = nullptr;
	m_Pushed = false;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBoxButton::ChangeSkin(GUISkin *Skin){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBoxButton::Draw(GUIScreen *Screen){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBoxButton::Create(int X, int Y, int Width, int Height){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBoxButton::OnMouseDown(int X, int Y, int Buttons, int Modifier){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBoxButton::OnMouseUp(int X, int Y, int Buttons, int Modifier) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBoxButton::SetPushed(bool Pushed) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIComboBoxButton::Destroy() {
}