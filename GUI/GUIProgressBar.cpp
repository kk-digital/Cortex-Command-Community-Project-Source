#include "GUI.h"
#include "GUIProgressBar.h"

using namespace RTE;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIProgressBar::GUIProgressBar(GUIManager *Manager, GUIControlManager *ControlManager) : GUIControl(), GUIPanel(Manager) {
	m_ControlID = "PROGRESSBAR";
	m_DrawBitmap = nullptr;
	m_IndicatorImage = nullptr;
	m_ControlManager = ControlManager;
	m_Spacing = 0;
	m_Value = 0;
	m_Minimum = 0;
	m_Maximum = 100;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::Create(const std::string &Name, int X, int Y, int Width, int Height) {
	GUIControl::Create(Name, X, Y, Width, Height);

	// Minimum size of the control
	m_MinWidth = 40;
	m_MinHeight = 10;

	// Default size of the control
	m_DefWidth = 100;
	m_DefHeight = 20;

	// Setup the panel
	m_X = X;
	m_Y = Y;
	m_Width = m_DefWidth;
	m_Height = m_DefHeight;

	if (Width != -1) { m_Width = Width; }
	if (Height != -1) { m_Height = Height; }

	// Make sure the control isn't too small
	m_Width = std::max(m_Width, m_MinWidth);
	m_Height = std::max(m_Height, m_MinHeight);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::Create(GUIProperties *Props){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::Destroy(){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::ChangeSkin(GUISkin *Skin){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::BuildBitmap(){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::Draw(GUIScreen *Screen){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::OnMouseDown(int X, int Y, int Buttons, int Modifier) {
	CaptureMouse();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::OnMouseUp(int X, int Y, int Buttons, int Modifier) {
	ReleaseMouse();
	if (PointInside(X, Y)) { AddEvent(GUIEvent::Notification, Clicked, Buttons); }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::OnMouseMove(int X, int Y, int Buttons, int Modifier) {}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIPanel * GUIProgressBar::GetPanel() {
	return this;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::Move(int X, int Y) {
	GUIPanel::SetPositionAbs(X, Y);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::Resize(int Width, int Height){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::GetControlRect(int *X, int *Y, int *Width, int *Height) {
	GUIPanel::GetRect(X, Y, Width, Height);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::StoreProperties() {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::SetValue(int Value){}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUIProgressBar::GetValue() const {
	return m_Value;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::SetMinimum(int Minimum) {
	m_Minimum = Minimum;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUIProgressBar::GetMinimum() const {
	return m_Minimum;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::SetMaximum(int Maximum) {
	m_Maximum = Maximum;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUIProgressBar::GetMaximum() const {
	return m_Maximum;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUIProgressBar::ApplyProperties(GUIProperties *Props){}