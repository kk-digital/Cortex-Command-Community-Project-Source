#include "GUI.h"
#include "GUICheckbox.h"

using namespace RTE;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUICheckbox::GUICheckbox(GUIManager *Manager, GUIControlManager *ControlManager) : GUIControl(), GUIPanel(Manager) {
	m_ControlID = "CHECKBOX";
	m_Image = nullptr;
	m_ControlManager = ControlManager;
	m_Check = Unchecked;
	m_Mouseover = false;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::Create(const std::string &Name, int X, int Y, int Width, int Height) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::Create(GUIProperties *Props) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::Destroy() {}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::ChangeSkin(GUISkin *Skin) {}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::BuildBitmap() {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::Draw(GUIScreen *Screen) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::OnMouseDown(int X, int Y, int Buttons, int Modifier) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::OnMouseUp(int X, int Y, int Buttons, int Modifier) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::OnMouseEnter(int X, int Y, int Buttons, int Modifier) {
	m_Mouseover = true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::OnMouseLeave(int X, int Y, int Buttons, int Modifier) {
	m_Mouseover = false;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GUIPanel * GUICheckbox::GetPanel() {
	return this;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::Move(int X, int Y) {
	SetPositionAbs(X, Y);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::Resize(int Width, int Height) {}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::GetControlRect(int *X, int *Y, int *Width, int *Height) {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::StoreProperties() {
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::SetText(const std::string &Text) {
	m_Text = Text;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::string GUICheckbox::GetText() const {
	return m_Text;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::SetCheck(int Check) {
	m_Check = Check;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int GUICheckbox::GetCheck() const {
	return m_Check;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void GUICheckbox::ApplyProperties(GUIProperties *Props) {
}