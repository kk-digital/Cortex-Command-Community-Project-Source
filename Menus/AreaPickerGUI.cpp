//////////////////////////////////////////////////////////////////////////////////////////
// File:            AreaPickerGUI.cpp
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Implementation file for the AreaPickerGUI class
// Project:         GUI Library
// Author(s):       Daniel Tabar
//                  dtabar@datarealms.com
//                  http://www.datarealms.com


//////////////////////////////////////////////////////////////////////////////////////////
// Inclusions of header files

#include "AreaPickerGUI.h"

#include "FrameMan.h"
#include "PresetMan.h"
#include "ActivityMan.h"
#include "UInputMan.h"

#include "GUI.h"
#include "AllegroBitmap.h"
#include "AllegroScreen.h"
#include "AllegroInput.h"
#include "GUIControlManager.h"
#include "GUICollectionBox.h"
#include "GUITab.h"
#include "GUIListBox.h"
#include "GUITextBox.h"
#include "GUIButton.h"
#include "GUILabel.h"

#include "Controller.h"

using namespace RTE;

BITMAP *RTE::AreaPickerGUI::s_pCursor = 0;

//////////////////////////////////////////////////////////////////////////////////////////
// Method:          Clear
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Clears all the member variables of this AreaPickerGUI, effectively
//                  resetting the members of this abstraction level only.

void AreaPickerGUI::Clear(){}


//////////////////////////////////////////////////////////////////////////////////////////
// Method:          Create
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Makes the AreaPickerGUI area ready for use.

int AreaPickerGUI::Create(Controller* pController, string onlyOfType) { return 0; }


//////////////////////////////////////////////////////////////////////////////////////////
// Method:          Destroy
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Destroys and resets (through Clear()) the AreaPickerGUI area.

void AreaPickerGUI::Destroy(){}


//////////////////////////////////////////////////////////////////////////////////////////
// Method:          SetEnabled
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Enables or disables the menu. This will animate it in and out of view.

void AreaPickerGUI::SetEnabled(bool enable){}


//////////////////////////////////////////////////////////////////////////////////////////
// Method:          SetPosOnScreen
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Sets where on the screen that this GUI is being drawn to. If upper
//                  left corner, then 0, 0. This will affect the way the mouse is positioned
//                  etc.

void AreaPickerGUI::SetPosOnScreen(int newPosX, int newPosY)
{}


//////////////////////////////////////////////////////////////////////////////////////////
// Method:          GetNextArea
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Gets the next area in the areas list, even if the picker is disabled.

Scene::Area* AreaPickerGUI::GetNextArea() { return NULL; }


//////////////////////////////////////////////////////////////////////////////////////////
// Method:          GetPrevArea
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Gets the prev area in the areas list, even if the picker is disabled.

Scene::Area* AreaPickerGUI::GetPrevArea() { return NULL; }


//////////////////////////////////////////////////////////////////////////////////////////
// Method:          UpdateAreasList
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Adds all areas of a specific type already defined in PresetMan
//                  to the current Areas list

void AreaPickerGUI::UpdateAreasList(string selectAreaName){}


//////////////////////////////////////////////////////////////////////////////////////////
// Method:          Update
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Updates the state of this Menu each frame

void AreaPickerGUI::Update(){}


//////////////////////////////////////////////////////////////////////////////////////////
// Virtual Method:  Draw
//////////////////////////////////////////////////////////////////////////////////////////
// Description:     Draws the menu

void AreaPickerGUI::Draw(BITMAP *drawBitmap) const{}